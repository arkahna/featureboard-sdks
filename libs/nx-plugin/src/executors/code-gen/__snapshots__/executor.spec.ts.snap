// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`code-Executor > template: dotnet-api > should produce the expected features files > apps/my-app/Features.cs 1`] = `
"using FeatureBoard.DotnetSdk.Attributes;
using FeatureBoard.DotnetSdk.Models;
using System.Runtime.Serialization;

namespace Project.FeatureBoard.MyApp;

// Features
public class Features : IFeatures
{
  [FeatureKeyName(\\"requires-attribution\\")]
  public bool RequiresAttribution { get; set; }
  [FeatureKeyName(\\"allow-edits\\")]
  public bool AllowEdits { get; set; }
  [FeatureKeyName(\\"number-custom-collections\\")]
  public decimal NumberCustomCollections { get; set; }
  [FeatureKeyName(\\"team-management\\")]
  public bool TeamManagement { get; set; }
  [FeatureKeyName(\\"custom-collections\\")]
  public CustomCollections CustomCollections { get; set; }
  [FeatureKeyName(\\"view-subscribers\\")]
  public bool ViewSubscribers { get; set; }
}


// Options Enums

//Custom collections
public enum CustomCollections
{
  [EnumMember(Value = \\"Disabled\\")]
  Disabled,
  [EnumMember(Value = \\"Enabled\\")]
  Enabled,
  [EnumMember(Value = \\"Shared\\")]
  Shared,
}

// Type Enums
public enum BooleanFeature
{
  RequiresAttribution,
  AllowEdits,
  TeamManagement,
  ViewSubscribers,
}
public enum NumberFeature
{
  NumberCustomCollections,
}
public enum StringFeature
{
}

// Feature Gate attribute
[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true)]
public class FeatureFilterAttribute : FeatureFilterAttributeBase
{
  protected override string Feature { get; }
  protected override object DefaultValue { get; }
  protected override object? IsEqualTo { get; }
  private readonly Dictionary<string, string> _featureKeyLookup = new()
  {
    { \\"RequiresAttribution\\", \\"requires-attribution\\" },
    { \\"AllowEdits\\", \\"allow-edits\\" },
    { \\"NumberCustomCollections\\", \\"number-custom-collections\\" },
    { \\"TeamManagement\\", \\"team-management\\" },
    { \\"ViewSubscribers\\", \\"view-subscribers\\" },
  };

  public FeatureFilterAttribute(BooleanFeature feature, bool defaultValue)
  {
    Feature = _featureKeyLookup.GetValueOrDefault(feature.ToString()) ?? feature.ToString();
    DefaultValue = defaultValue;
  }

  public FeatureFilterAttribute(BooleanFeature feature, bool isEqualTo, bool defaultValue)
  {
    Feature = _featureKeyLookup.GetValueOrDefault(feature.ToString()) ?? feature.ToString();
    IsEqualTo = isEqualTo;
    DefaultValue = defaultValue;
  }

  public FeatureFilterAttribute(StringFeature feature, string isEqualTo, string defaultValue)
  {
    Feature = _featureKeyLookup.GetValueOrDefault(feature.ToString()) ?? feature.ToString();
    IsEqualTo = isEqualTo;
    DefaultValue = defaultValue;
  }

  public FeatureFilterAttribute(NumberFeature feature, decimal isEqualTo, decimal defaultValue)
  {
    Feature = _featureKeyLookup.GetValueOrDefault(feature.ToString()) ?? feature.ToString();
    IsEqualTo = isEqualTo;
    DefaultValue = defaultValue;
  }

  public FeatureFilterAttribute(CustomCollections isEqualTo, CustomCollections defaultValue)
  {
    Feature = \\"custom-collections\\";
    IsEqualTo = isEqualTo;
    DefaultValue = defaultValue;
  }

}
"
`;

exports[`code-Executor > template: dotnet-api > should produce the expected features files > apps/my-app/Project.FeatureBoard.MyApp.csproj 1`] = `""`;

exports[`code-Executor > template: dotnet-api > should produce the expected features files > apps/my-app/project.json 1`] = `
"{
  \\"name\\": \\"my-app\\",
  \\"$schema\\": \\"../../node_modules/nx/schemas/project-schema.json\\",
  \\"projectType\\": \\"application\\",
  \\"targets\\": {
    \\"my-target\\": {
      \\"executor\\": \\"nx:noop\\"
    }
  }
}
"
`;

exports[`code-Executor > template: typescript > should produce the expected features files > apps/my-app/Project.FeatureBoard.MyApp.csproj 1`] = `""`;

exports[`code-Executor > template: typescript > should produce the expected features files > apps/my-app/featureboard-features.ts 1`] = `
"export interface SaaSyIconsFeatures {

    // Requires attribution
    // 
    'requires-attribution': boolean

    // Allow edits
    // Allows the user to edit colour, backgrounds
    'allow-edits': boolean

    // Number custom collections
    // 
    'number-custom-collections': number

    // Team management
    // 
    'team-management': boolean

    // Custom collections
    // 
    'custom-collections': 'Disabled' | 'Enabled' | 'Shared'

    // View subscribers
    // 
    'view-subscribers': boolean
}
export type SaaSyIconsFeature = keyof SaaSyIconsFeatures"
`;

exports[`code-Executor > template: typescript > should produce the expected features files > apps/my-app/project.json 1`] = `
"{
  \\"name\\": \\"my-app\\",
  \\"$schema\\": \\"../../node_modules/nx/schemas/project-schema.json\\",
  \\"projectType\\": \\"application\\",
  \\"targets\\": {
    \\"my-target\\": {
      \\"executor\\": \\"nx:noop\\"
    }
  }
}
"
`;
